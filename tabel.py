import sysfroimport numpy as npimport matplotlibimport matplotlib as pltimport astropyfrom astropy.io import asciifrom astropy.io import fitsfrom sys import argvfrom astropy.coordinates import SkyCoordfrom astropy import units as utbl = ascii.read('wen2012.csv') # leitura do catalogo wentbr = fits.open('redmapper.fits') # leitura do catalogo redmappertbdata = tbr[1].dataprint tbl #imprimi o catalogo wenprint tbdata # imprimi o catalogo redmapperc1 = SkyCoord(ra = tbl['col2']*u.degree, dec = tbl['col3']*u.degree) # Pega apenas os valores de ra e dec do catalogo wenc2 = SkyCoord(ra = tbdata['RA']*u.degree, dec = tbdata['DEC']*u.degree) # Pega apenas os valores de ra e dec do catalogo redmapperc1 = SkyCoord(ra = tbl['col12']*u.deg, dec = tbl['col3']*u.deg, distance = 1000*u.kpc) # Pega os valores de ra e dec e uma mascara de 1Mpcc2 = SkyCoord(ra = tbdata['RA']*u.deg, dec = tbdata['DEC']*u.deg, distance = 1000*u.kpc) # Pega os valores de ra e dec e uma mascara de 1Mpcidx, d2d, d3d = c1.match_to_catalog_3d(c2) #mostra os matches com os angulos, as distancias e os objetos do catalogo de wen em relacao ao redmapperidx, d2d, d3d = c2.match_to_catalog_3d(c1) #mostra os matches com os angulos, as distancias e os objetos do catalogo de redmapper em relacao ao wenprint sys.argvprint 'Number of arguments: ', len(sys.argv), 'arguments.'